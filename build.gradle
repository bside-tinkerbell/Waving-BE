plugins {
	id 'java'
	id 'org.springframework.boot' version '3.1.0'
	id 'io.spring.dependency-management' version '1.1.0'
	id 'org.asciidoctor.jvm.convert' version '3.3.2'
}

group = 'com.bsideTinkerbell'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

configurations {
	asciidoctorExtensions
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	// https://mvnrepository.com/artifact/com.google.code.gson/gson
	implementation group: 'com.google.code.gson', name: 'gson', version: '2.10.1'
	implementation 'com.mysql:mysql-connector-j'
	// https://mvnrepository.com/artifact/org.apache.httpcomponents.client5/httpclient5
	implementation group: 'org.apache.httpcomponents.client5', name: 'httpclient5', version: '5.2.1'
	// https://mvnrepository.com/artifact/org.glassfish.jaxb/jaxb-runtime
	// Java EE와 CORBA Module이 제거 된 이유로 로그인 API JWT 관련 오류 해결에 필요
//	implementation group: 'org.glassfish.jaxb', name: 'jaxb-runtime', version: '4.0.3'
	// https://mvnrepository.com/artifact/javax.xml.bind/jaxb-api
	implementation group: 'javax.xml.bind', name: 'jaxb-api', version: '2.3.1'
	// https://mvnrepository.com/artifact/io.jsonwebtoken/jjwt-api
	implementation group: 'io.jsonwebtoken', name: 'jjwt-api', version: '0.11.5'
	// https://mvnrepository.com/artifact/io.jsonwebtoken/jjwt-impl
	runtimeOnly group: 'io.jsonwebtoken', name: 'jjwt-impl', version: '0.11.5'
	// https://mvnrepository.com/artifact/io.jsonwebtoken/jjwt-jackson
	runtimeOnly group: 'io.jsonwebtoken', name: 'jjwt-jackson', version: '0.11.5'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-data-redis'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'
	asciidoctorExtensions 'org.springframework.restdocs:spring-restdocs-asciidoctor'
}

ext {
	// snippets 파일이 저장될 경로 snippetsDir 변수 설정
	set('snippetsDir', file("build/generated-snippets"))
}

test {
	// 위에서 작성한 snippetsDir 디렉토리를 test의 output으로 구성하는 설정 -> 스니펫 조각들이 build/generated-snippets로 출력
	outputs.dir snippetsDir
	useJUnitPlatform()
}

// 5 asciidoctor 작업 구성
asciidoctor {
	// gradle build시 test -> asciidoctor 순으로 진행된다.
	dependsOn test

	// asciidoctorExt 설정 사용
	configurations 'asciidoctorExtensions'

	// input 디렉토리를 snippertsDir로 설정
	inputs.dir snippetsDir

	sources{
		include("**/index.adoc","**/*.adoc")
	}

	// .adoc파일에서 다른 .adoc를 include하여 사용하는 경우 경로를 동일한 경로를 baseDir로 동일하게 설정
	baseDirFollowsSourceFile()
}

// static/docs 폴더 비우기
asciidoctor.doFirst {
	delete file('src/main/resources/static/docs')
}

// asccidoctor 작업 이후 생성된 HTML 파일을 static/docs 로 copy
task createDocument(type: Copy) {
	// gradle build시 asciidoctor -> createDocument 순으로 진행된다.
	dependsOn asciidoctor

	from file("build/docs/asciidoc")
	into file("src/main/resources/static/docs")
}

// build 의 의존작업 명시
build {
	dependsOn createDocument
}

bootJar {
	// gradle build시 createDocument -> bootJar 순으로 진행된다.
	dependsOn asciidoctor

	// gradle build시 asciidoctor.outputDir에 HTML파일이 생기고 이것을 jar안에 /resource/static 폴더에 복사
	from("${asciidoctor.outputDir}/html5") {
		into 'static/docs'
	}
}